@startuml

interface DataWriter {
    + writeData(String inputString): int
}

interface DataReader {
    + readData(): String
}

class MyDatabase {
    - static Map<Integer, String> _data
    - static int _count
    + writeData(String inputString): int
}

class File {
    - path: String
    + File(String path)
    + readData(): String
    + writeData(String inputString): int
}

class NetworkReader {
    - protocol: String
    - host: String
    - file: String
    + NetworkReader(String protocol, String host, String file)
    + readData(): String
}

class EncodingModule {
    - dataReader: DataReader
    - dataWriter: DataWriter
    + EncodingModule(DataReader dataReader, DataWriter dataWriter)
    + encode(): void
}

class EncodingModuleClient {
    + main(String[] args): void
}

DataReader <|.. File
DataReader <|.. NetworkReader

DataWriter <|.. MyDatabase
DataWriter <|.. File

EncodingModule o-- DataReader
EncodingModule o-- DataWriter

EncodingModuleClient --> EncodingModule

@enduml